name: CD Full Pipeline (local PG)

on:
  workflow_dispatch:
    inputs:
      year:
        description: "Année à charger"
        required: true
        default: "2018"
        type: choice
        options:
          - "2010"
          - "2011"
          - "2012"
          - "2013"
          - "2014"
          - "2015"
          - "2016"
          - "2017"
          - "2018"
          - "2019"
          - "2020"
          - "2021"
          - "2022"
          - "2023"

jobs:
  full:
    runs-on: [self-hosted, Windows, X64]

    defaults:
      run:
        shell: powershell

    env:
      PGHOST: ${{ secrets.PGHOST }}
      PGPORT: ${{ secrets.PGPORT }}
      PGDATABASE: ${{ secrets.PGDATABASE }}
      PGUSER: ${{ secrets.PGUSER }}
      PGPASSWORD: ${{ secrets.PGPASSWORD }}
      LOG_LEVEL: INFO
      YEAR: ${{ github.event.inputs.year || '2018' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Python
        run: |
          python --version
          where python

      - name: Create venv + deps
        run: |
          python -m venv .venv
          .\.venv\Scripts\python -m pip install --upgrade pip
          .\.venv\Scripts\pip install psycopg2-binary pandas pyarrow

      - name: Run pipeline (staging + dims + faits)
        run: |
          .\.venv\Scripts\python med_demo/app/pipeline_runner.py --year $env:YEAR --stop-on-fail

      - name: Verify facts > 0
        run: |
          @'
          import os, psycopg2, sys
          y = os.environ["YEAR"]
          conn = psycopg2.connect(
              host=os.environ["PGHOST"],
              port=os.environ["PGPORT"],
              dbname=os.environ["PGDATABASE"],
              user=os.environ["PGUSER"],
              password=os.environ["PGPASSWORD"],
          )
          with conn, conn.cursor() as cur:
              cur.execute('SELECT COUNT(*) FROM "pro_sante".table_faits_pro_v2 WHERE annee=%s', (y,))
              n = cur.fetchone()[0]
              print("Rows FACTS", y, ":", n)
              if n == 0:
                  sys.exit("Smoke failed: facts are empty")
              else:
                  print("Facts OK")
          '@ | .\.venv\Scripts\python -
